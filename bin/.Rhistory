installed.packages('ggplot2')
installed.packages('ggplot')
installed.packages("ggplot")
install.packages("ggplot")
install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
clear
clc
set.seed(1410) # Make the sample reproducible
dsmall <- diamonds[sample(nrow(diamonds), 100), ]
dsmall
qplot(carat, price, data = diamonds)
qplot(log(carat), log(price), data = diamonds)
qplot(carat, x * y * z, data = diamonds)
qplot(carat, price, data = dsmall, colour = color)
qplot(carat, price, data = dsmall, shape = cut)
qplot(carat, price, data = dsmall, size = depth)
qplot(carat, price, data = dsmall, size = x*y*z)
qplot(carat, price, data = dsmall, size = I(2))
qplot(carat, price, data = dsmall, size = I(10))
qplot(carat, price, data = dsmall, size = I("red"))
qplot(carat, price, data = dsmall, color = I("red"))
qplot(carat, price, data = diamonds, alpha = I(1/10))
qplot(carat, price, data = diamonds, alpha = I(1/100))
qplot(carat, price, data = diamonds, alpha = I(1/200))
qplot(carat, price, data = diamonds, alpha = I(1/100))
qplot(carat, price, data = diamonds, alpha = I(1/50))
qplot(carat, price, data = diamonds, alpha = I(1/00))
qplot(carat, price, data = diamonds, alpha = I(1/100))
dir()
getwd()
ls
ls()
clear()
clc()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "Rcpp", "rpart", "spatial", "stringi", "survival"))
setwd("~/Dropbox/Research/computation/siddp/bin")
mydata <- read.csv("data.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = LB, colour = "LB"), size=1) +
geom_line(aes(y = UB, colour = "UB"), size=1) +
geom_ribbon(aes(ymin=UBl, ymax=UBr), alpha=0.2) +
xlab("iteration") +
ylab("bounds") +
ylim(0, 9000) +
labs(title="cut: L") +
theme(legend.title=element_blank()) +
theme(legend.position="none")
#guides(colour = guide_legend(override.aes = list(size=2))) +
#theme(legend.text = element_text(size=15))
#theme(plot.title = element_text(size=20)) +
#theme(axis.title = element_text(size=15),axis.text = element_text(size=12)) +
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(ggplot2)
mydata <- read.csv("data.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = LB, colour = "LB"), size=1) +
geom_line(aes(y = UB, colour = "UB"), size=1) +
geom_ribbon(aes(ymin=UBl, ymax=UBr), alpha=0.2) +
xlab("iteration") +
ylab("bounds") +
ylim(0, 9000) +
labs(title="cut: L") +
theme(legend.title=element_blank()) +
theme(legend.position="none")
#guides(colour = guide_legend(override.aes = list(size=2))) +
#theme(legend.text = element_text(size=15))
#theme(plot.title = element_text(size=20)) +
#theme(axis.title = element_text(size=15),axis.text = element_text(size=12)) +
library(ggplot2)
mydata <- read.csv("data.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = LB, colour = "LB"), size=1) +
geom_line(aes(y = UB, colour = "UB"), size=1) +
geom_ribbon(aes(ymin=UBl, ymax=UBr), alpha=0.2) +
xlab("iteration") +
ylab("bounds") +
ylim(2800, 8000) +
labs(title="cut: L") +
theme(legend.title=element_blank()) +
theme(legend.position="none")
#guides(colour = guide_legend(override.aes = list(size=2))) +
#theme(legend.text = element_text(size=15))
#theme(plot.title = element_text(size=20)) +
#theme(axis.title = element_text(size=15),axis.text = element_text(size=12)) +
library(ggplot2)
mydata <- read.csv("data.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = LB, colour = "LB"), size=1) +
geom_line(aes(y = UB, colour = "UB"), size=1) +
geom_ribbon(aes(ymin=UBl, ymax=UBr), alpha=0.2) +
xlab("iteration") +
ylab("bounds") +
ylim(2800, 8500) +
labs(title="cut: L") +
theme(legend.title=element_blank()) +
theme(legend.position="none")
#guides(colour = guide_legend(override.aes = list(size=2))) +
#theme(legend.text = element_text(size=15))
#theme(plot.title = element_text(size=20)) +
#theme(axis.title = element_text(size=15),axis.text = element_text(size=12)) +
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank()) +
theme(legend.position="none")
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
geom_line(aes(y = I, colour = "I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
#geom_line(aes(y = I, colour = "I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
#geom_line(aes(y = I, colour = "I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
#geom_line(aes(y = I, colour = "I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
geom_line(aes(y = BL, colour = "B + I"), size=1) +
geom_line(aes(y = BL, colour = "B + L"), size=1) +
geom_line(aes(y = SBL, colour = "SB + L"), size=1) +
geom_line(aes(y = SBIL, colour = "SB + I + L"), size=1) +
#geom_line(aes(y = I, colour = "I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
geom_line(aes(y = BI, colour = "B + I"), size=1) +
geom_line(aes(y = BL, colour = "B + L"), size=1) +
geom_line(aes(y = SBL, colour = "SB + L"), size=1) +
#geom_line(aes(y = I, colour = "I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
geom_line(aes(y = BI, colour = "B + I"), size=1) +
geom_line(aes(y = BL, colour = "B + L"), size=1) +
geom_line(aes(y = SBI, colour = "SB + I"), size=1) +
geom_line(aes(y = SBL, colour = "SB + L"), size=1) +
#geom_line(aes(y = I, colour = "I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
#geom_line(aes(y = SB, colour = "SB"), size=1) +
#geom_line(aes(y = L, colour = "L"), size=1) +
geom_line(aes(y = BI, colour = "B + I"), size=1) +
geom_line(aes(y = BL, colour = "B + L"), size=1) +
#geom_line(aes(y = SBI, colour = "SB + I"), size=1) +
#geom_line(aes(y = SBL, colour = "SB + L"), size=1) +
#geom_line(aes(y = I, colour = "I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
#geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
#geom_line(aes(y = L, colour = "L"), size=1) +
#geom_line(aes(y = BI, colour = "B + I"), size=1) +
#geom_line(aes(y = BL, colour = "B + L"), size=1) +
geom_line(aes(y = SBI, colour = "SB + I"), size=1) +
geom_line(aes(y = SBL, colour = "SB + L"), size=1) +
#geom_line(aes(y = I, colour = "I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
#geom_line(aes(y = SB, colour = "SB"), size=1) +
#geom_line(aes(y = L, colour = "L"), size=1) +
geom_line(aes(y = BI, colour = "B + I"), size=1) +
geom_line(aes(y = BL, colour = "B + L"), size=1) +
#geom_line(aes(y = SBI, colour = "SB + I"), size=1) +
#geom_line(aes(y = SBL, colour = "SB + L"), size=1) +
#geom_line(aes(y = I, colour = "I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
geom_line(aes(y = BI, colour = "B + I"), size=1) +
geom_line(aes(y = BL, colour = "B + L"), size=1) +
geom_line(aes(y = SBI, colour = "SB + I"), size=1) +
geom_line(aes(y = SBL, colour = "SB + L"), size=1) +
geom_line(aes(y = I, colour = "I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
geom_line(aes(y = I, colour = "I"), size=1) +
geom_line(aes(y = BI, colour = "B + I"), size=1) +
geom_line(aes(y = BL, colour = "B + L"), size=1) +
geom_line(aes(y = SBI, colour = "SB + I"), size=1) +
geom_line(aes(y = SBL, colour = "SB + L"), size=1) +
geom_line(aes(y = LI, colour = "L + I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
geom_line(aes(y = B, colour = "B"), size=1) +
geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
#geom_line(aes(y = I, colour = "I"), size=1) +
geom_line(aes(y = BI, colour = "B + I"), size=1) +
geom_line(aes(y = BL, colour = "B + L"), size=1) +
geom_line(aes(y = SBI, colour = "SB + I"), size=1) +
geom_line(aes(y = SBL, colour = "SB + L"), size=1) +
geom_line(aes(y = LI, colour = "L + I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
#geom_line(aes(y = B, colour = "B"), size=1) +
#geom_line(aes(y = SB, colour = "SB"), size=1) +
geom_line(aes(y = L, colour = "L"), size=1) +
#geom_line(aes(y = I, colour = "I"), size=1) +
#geom_line(aes(y = BI, colour = "B + I"), size=1) +
#geom_line(aes(y = BL, colour = "B + L"), size=1) +
#geom_line(aes(y = SBI, colour = "SB + I"), size=1) +
#geom_line(aes(y = SBL, colour = "SB + L"), size=1) +
geom_line(aes(y = LI, colour = "L + I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
#geom_line(aes(y = B, colour = "B"), size=1) +
#geom_line(aes(y = SB, colour = "SB"), size=1) +
#geom_line(aes(y = L, colour = "L"), size=1) +
geom_line(aes(y = I, colour = "I"), size=1) +
geom_line(aes(y = BI, colour = "B + I"), size=1) +
#geom_line(aes(y = BL, colour = "B + L"), size=1) +
geom_line(aes(y = SBI, colour = "SB + I"), size=1) +
#geom_line(aes(y = SBL, colour = "SB + L"), size=1) +
geom_line(aes(y = LI, colour = "L + I"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
mydata <- read.csv("data2.csv")
ggplot(mydata, aes(iteration)) +
#geom_line(aes(y = B, colour = "B"), size=1) +
#geom_line(aes(y = SB, colour = "SB"), size=1) +
#geom_line(aes(y = L, colour = "L"), size=1) +
geom_line(aes(y = I, colour = "I"), size=1) +
geom_line(aes(y = BI, colour = "I + B"), size=1) +
#geom_line(aes(y = BL, colour = "B + L"), size=1) +
geom_line(aes(y = SBI, colour = "I + SB"), size=1) +
#geom_line(aes(y = SBL, colour = "SB + L"), size=1) +
geom_line(aes(y = LI, colour = "I + L"), size=1) +
xlab("iteration") +
ylab("lower bounds") +
labs(title="lower bound improvement") +
theme(legend.title=element_blank())
